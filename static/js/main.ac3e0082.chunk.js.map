{"version":3,"sources":["api/Database.js","api/Authentication.js","components/Login.js","components/Profile.js","components/EditProfile.js","components/ClassList.js","components/ClassInfo.js","components/Teacher.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","getDataClass","Promise","resolve","reject","ref","on","snapshot","Class","forEach","element","push","val","getDataTeacher","Teacher","HMAC_SHA256","PASSWORD","SALT","Crypto","HmacSHA256","toString","Login","props","state","e","this","setState","target","name","value","preventDefault","account","username","toLowerCase","password","checkAccount","className","onSubmit","handleSubmit","htmlFor","id","onChange","handleChange","type","autoComplete","required","onClick","alert","Component","Profile","DataTeacher","teacher","filter","teacherid","getData","changeStatus","signOut","parseInt","gender","dateofbirth","phone","renderProfile","EditProfile","checked","length","BASE64","salt","i","Math","floor","random","CREATE_SALT","HASH","hash","teacherKey","key","child","set","defaultValue","disabled","renderEditProfile","ClassList","DataClass","classes","classid","getClassId","map","index","handleClick","mapClass","renderClassList","ClassInfo","classInfo","Course","DataCourse","courseid","Student","Students","ClassMember","DataClassMember","classMemberElement","studentElement","studentid","studentId","studentName","studentGender","studentDateOfBirth","studentPhone","studentCount","count","studentScore","score","studentCourseId","studentCourseName","sort","a","b","getStudentEdit","renderEditForm","student","editStatus","classMemberKey","renderClassInfo","status","option","App","JSON","parse","sessionStorage","getItem","setItem","stringify","clear","checkLogin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac3e0082.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nvar Config = {\r\n  apiKey: \"AIzaSyDu7RYF7A3eaC2uedmAEUFyz1u14d1def4\",\r\n  authDomain: \"class-104.firebaseapp.com\",\r\n  databaseURL: \"https://class-104.firebaseio.com\",\r\n  projectId: \"class-104\",\r\n  storageBucket: \"class-104.appspot.com\",\r\n  messagingSenderId: \"642296584585\",\r\n  appId: \"1:642296584585:web:a63c7c9e96c03e203e6958\"\r\n};\r\n// Initialize Firebase\r\n\r\nfirebase.initializeApp(Config);\r\n\r\n// API\r\nconst database = firebase.database();\r\n\r\nfunction getDataRef(ref) {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(ref).on(\"value\", (snapshot) => {\r\n      let Result = [];\r\n      snapshot.forEach((element) => {\r\n        Result.push(element.val());\r\n      })\r\n      resolve(Result)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataAdmin() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"admin\").on(\"value\", (snapshot) => {\r\n      resolve(snapshot.val())\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataClass() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"class\").on(\"value\", (snapshot) => {\r\n      let Class = [];\r\n      snapshot.forEach((element) => {\r\n        Class.push(element.val());\r\n      })\r\n      resolve(Class)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataClassMember() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"class_member\").on(\"value\", (snapshot) => {\r\n      let ClassMember = [];\r\n      snapshot.forEach((element) => {\r\n        ClassMember.push(element.val());\r\n      })\r\n      resolve(ClassMember)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataCourse() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"course\").on(\"value\", (snapshot) => {\r\n      let Course = [];\r\n      snapshot.forEach((element) => {\r\n        Course.push(element.val());\r\n      })\r\n      resolve(Course)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataStudent() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"student\").on(\"value\", (snapshot) => {\r\n      let Student = [];\r\n      snapshot.forEach((element) => {\r\n        Student.push(element.val());\r\n      })\r\n      resolve(Student)\r\n    })\r\n  })\r\n}\r\n\r\nfunction getDataTeacher() {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n      let Teacher = [];\r\n      snapshot.forEach((element) => {\r\n        Teacher.push(element.val());\r\n      })\r\n      resolve(Teacher)\r\n    })\r\n  })\r\n}\r\n\r\nexport {\r\n  database,\r\n  getDataRef,\r\n  getDataAdmin,\r\n  getDataClass,\r\n  getDataClassMember,\r\n  getDataCourse,\r\n  getDataStudent,\r\n  getDataTeacher\r\n}","import Crypto from \"crypto-js\";\r\n\r\nexport function CREATE_SALT(length) {\r\n    const BASE64 = [\r\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\r\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n        \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"\r\n    ];\r\n\r\n    let salt = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n        const RANDOM_INDEX = Math.floor(Math.random() * BASE64.length);\r\n        salt += BASE64[RANDOM_INDEX];\r\n    }\r\n\r\n    return salt\r\n}\r\n\r\nexport function HMAC_SHA256(PASSWORD, SALT) {\r\n    const SECRET_KEY = \"lhrYDV62\";\r\n    const CIPHER_TEXT = Crypto.HmacSHA256(PASSWORD + SALT, SECRET_KEY).toString();\r\n    return CIPHER_TEXT\r\n}","import React, { Component } from 'react';\r\n\r\n//TODO SCSS\r\nimport \"../scss/Login.scss\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const account = {\r\n            username: this.state.username.toLowerCase(),\r\n            password: this.state.password\r\n        }\r\n        this.props.checkAccount(account)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"login\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <h1>GIÁO VIÊN</h1>\r\n                    <div>\r\n                        <label htmlFor=\"login_username\">TÀI KHOẢN</label>\r\n                        <input name=\"username\" id=\"login_username\" onChange={(e) => this.handleChange(e)} type=\"text\" autoComplete=\"Off\" required/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"login_password\">MẬT KHẨU</label>\r\n                        <input name=\"password\" id=\"login_password\" onChange={(e) => this.handleChange(e)} type=\"password\" autoComplete=\"Off\" required/>\r\n                    </div>\r\n                    <p onClick={() => alert(\"Chưa phát triển.\")}>Quên mật khẩu?</p>\r\n                    <button type=\"submit\">ĐĂNG NHẬP</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataTeacher } from \"../api/Database\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/Profile.scss\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async getData() {\r\n        const DataTeacher = await getDataTeacher();\r\n        const teacher = DataTeacher.filter((teacher) => teacher.teacherid === this.props.teacherid)[0];\r\n        this.setState({ teacher: teacher });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    renderProfile() {\r\n        if(this.state.teacher) {\r\n            return (\r\n                <div className=\"profile\">\r\n                    <h1>Thông tin cá nhân</h1>\r\n                    <div className=\"btn\">\r\n                        <button onClick={() => this.props.changeStatus(\"EDIT_PROFILE\")}>Sửa thông tin</button>\r\n                        <button onClick={() => this.props.signOut()}>Đăng xuất</button>\r\n                    </div>\r\n                    <ul>\r\n                        <li>\r\n                            <h2>Tài khoản</h2>\r\n                            <p>{this.state.teacher.username}</p>\r\n                        </li>\r\n                        <li>\r\n                            <h2>Họ và tên</h2>\r\n                            <p>{this.state.teacher.name}</p>\r\n                        </li>\r\n                        <li>\r\n                            <h2>Giới tính</h2>\r\n                            <p>{parseInt(this.state.teacher.gender) ? \"Nữ\" : \"Nam\"}</p>\r\n                        </li>\r\n                        <li>\r\n                            <h2>Ngày sinh</h2>\r\n                            <p>{this.state.teacher.dateofbirth}</p>\r\n                        </li>\r\n                        <li>\r\n                            <h2>Số điện thoại</h2>\r\n                            <p>{this.state.teacher.phone}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderProfile()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataTeacher, database } from \"../api/Database\";\r\nimport { CREATE_SALT, HMAC_SHA256 } from \"../api/Authentication\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/EditProfile.scss\";\r\n\r\nclass EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async getData() {\r\n        const DataTeacher = await getDataTeacher();\r\n        const teacher = DataTeacher.filter((teacher) => teacher.teacherid === this.props.teacherid)[0];\r\n        this.setState({ teacher: teacher });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        const SALT = CREATE_SALT(10);\r\n\r\n        if(name === \"password\") {\r\n            const HASH = HMAC_SHA256(value, SALT);\r\n            this.setState({\r\n                teacher: {...this.state.teacher, salt: SALT, hash: HASH}\r\n            });\r\n        } else {\r\n            this.setState({\r\n                teacher: {...this.state.teacher, [name]: value}\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let teacherKey;\r\n        database.ref(\"teacher\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().teacherid === this.state.teacher.teacherid) {\r\n                    teacherKey = element.key\r\n                }\r\n            })\r\n        })\r\n        database.ref(\"teacher\").child(teacherKey).set(this.state.teacher);\r\n        alert(\"Lưu thông tin thành công.\");\r\n        this.props.changeStatus(\"PROFILE\");\r\n    }\r\n\r\n    renderEditProfile() {\r\n        if(this.state.teacher) {\r\n            return (\r\n                <div className=\"edit_profile\">\r\n                    <h1>Sửa thông tin cá nhân</h1>\r\n                    <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                        <div>\r\n                            <label>Tài khoản</label>\r\n                            <input type=\"text\" name=\"username\" defaultValue={this.state.teacher.username} disabled/>\r\n                        </div>\r\n                        <div>\r\n                            <label>Mật khẩu</label>\r\n                            <input type=\"password\" name=\"password\" onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                        </div>\r\n                        <div>\r\n                            <label>Họ và tên</label>\r\n                            <input type=\"text\" name=\"name\" defaultValue={this.state.teacher.name} onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                        </div>\r\n                        <div>\r\n                            <label>Giới tính</label>\r\n                            <select name=\"gender\" defaultValue={this.state.teacher.gender} onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required>\r\n                                <option value={0}>Nam</option>\r\n                                <option value={1}>Nữ</option>\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label>Ngày sinh</label>\r\n                            <input type=\"date\" name=\"dateofbirth\" defaultValue={this.state.teacher.dateofbirth} onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                        </div>\r\n                        <div>\r\n                            <label>Số điện thoại</label>\r\n                            <input type=\"number\" name=\"phone\" defaultValue={this.state.teacher.phone} onChange={(e) => this.handleChange(e)} autoComplete=\"off\" required/>\r\n                        </div>\r\n                        <button type=\"submit\">Lưu</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderEditProfile()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataClass } from \"../api/Database\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/ClassList.scss\";\r\n\r\nclass ClassList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async getData() {\r\n        const DataClass = await getDataClass();\r\n        let classes = [];\r\n        DataClass.forEach((element) => {\r\n            if(element.teacherid === this.props.teacherid) {\r\n                classes.push(element.classid)\r\n            }\r\n        });\r\n        this.setState({ classes: classes });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    handleClick(element) {\r\n        this.props.getClassId(element);\r\n        this.props.changeStatus(\"CLASS_INFO\");\r\n    }\r\n\r\n    mapClass() {\r\n        return this.state.classes.map((element, index) => (\r\n            <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{element}</td>\r\n                <td>\r\n                    <button onClick={() => this.handleClick(element)}>Xem</button>\r\n                </td>\r\n            </tr>\r\n        ))\r\n    }\r\n\r\n    renderClassList() {\r\n        if(this.state.classes) {\r\n            return (\r\n                <div className=\"class_list\">\r\n                    <h1>Danh sách lớp</h1>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã lớp</th>\r\n                                <th>Chức năng</th>\r\n                            </tr>\r\n                            {this.mapClass()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderClassList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassList;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataClassMember, getDataClass, getDataCourse, getDataStudent, database } from \"../api/Database\";\r\n\r\n//TODO SCSS\r\nimport \"../scss/ClassInfo.scss\";\r\n\r\nclass ClassInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    async getData() {\r\n        let classInfo = [];\r\n        const DataClass = await getDataClass();\r\n        const Class = DataClass.filter((element) => element.classid === this.props.classid)[0];\r\n\r\n        const DataCourse = await getDataCourse();\r\n        const Course = DataCourse.filter((element) => element.courseid === Class.courseid)[0];\r\n\r\n        const Students = await getDataStudent();\r\n\r\n        const DataClassMember = await getDataClassMember();\r\n        const ClassMembers = DataClassMember.filter((element) => element.classid === this.props.classid);\r\n        ClassMembers.forEach((classMemberElement) => {\r\n            Students.forEach((studentElement) => {\r\n                if(classMemberElement.studentid === studentElement.studentid) {\r\n                    const element = {\r\n                        studentId: studentElement.studentid,\r\n                        studentName: studentElement.name,\r\n                        studentGender: studentElement.gender,\r\n                        studentDateOfBirth: studentElement.dateofbirth,\r\n                        studentPhone: studentElement.phone,\r\n                        studentCount: classMemberElement.count,\r\n                        studentScore: classMemberElement.score,\r\n                        studentCourseId: Course.courseid,\r\n                        studentCourseName: Course.name\r\n                    }\r\n                    classInfo.push(element);\r\n                }\r\n            })\r\n        })\r\n\r\n        classInfo = classInfo.sort((a, b) => {\r\n            if(a.studentId > b.studentId) return 1;\r\n            if(a.studentId < b.studentId) return -1;\r\n            return 0;\r\n        });\r\n\r\n        this.setState({ classInfo: classInfo });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    mapClass() {\r\n        if(this.state.classInfo) {\r\n            return this.state.classInfo.map((element, index) => (\r\n                <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{element.studentId}</td>\r\n                    <td>{element.studentName}</td>\r\n                    <td>{parseInt(element.studentGender) ? \"Nữ\" : \"Nam\"}</td>\r\n                    <td>{element.studentDateOfBirth}</td>\r\n                    <td>{element.studentPhone}</td>\r\n                    <td>{element.studentCount}</td>\r\n                    <td>{element.studentScore}</td>\r\n                    <td>{element.studentCourseId}</td>\r\n                    <td>{element.studentCourseName}</td>\r\n                    <td>\r\n                        <button onClick={() => this.getStudentEdit(element)}>Sửa</button>\r\n                    </td>\r\n                </tr>\r\n            ))\r\n        }\r\n    }\r\n\r\n    renderClassInfo() {\r\n        if(this.state.classInfo) {\r\n            return (\r\n                <div className=\"class_info\">\r\n                    <h1>Danh sách học sinh lớp {this.props.classid}</h1>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>STT</th>\r\n                                <th>Mã học sinh</th>\r\n                                <th>Họ và tên</th>\r\n                                <th>Giới tính</th>\r\n                                <th>Ngày sinh</th>\r\n                                <th>Số điện thoại</th>\r\n                                <th>Số buổi học</th>\r\n                                <th>Điểm</th>\r\n                                <th>Mã khóa học</th>\r\n                                <th>Tên khóa học</th>\r\n                                <th>Chức năng</th>\r\n                            </tr>\r\n                            {this.mapClass()}\r\n                        </tbody>\r\n                    </table>\r\n                    {this.renderEditForm()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    getStudentEdit(student) {\r\n        if(this.state.editStatus) {\r\n            alert(\"Bạn phải lưu trước khi sửa tiếp.\")\r\n        } else this.setState({ student: student, editStatus: true });\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        const student = {...this.state.student, [name]: value}\r\n\r\n        this.setState({\r\n            student: student\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let classMemberKey;\r\n        database.ref(\"class_member\").on(\"value\", (snapshot) => {\r\n            snapshot.forEach((element) => {\r\n                if(element.val().classid === this.props.classid && element.val().studentid === this.state.student.studentId) {\r\n                    classMemberKey = element.key\r\n                }\r\n            })\r\n        })\r\n        const student = {\r\n            classid: this.props.classid,\r\n            count: this.state.student.studentCount,\r\n            score: this.state.student.studentScore,\r\n            studentid: this.state.student.studentId\r\n        }\r\n        database.ref(\"class_member\").child(classMemberKey).set(student);\r\n        this.setState({ editStatus: false });\r\n        this.getData();\r\n    }\r\n\r\n    renderEditForm() {\r\n        if(this.state.student && this.state.editStatus) {\r\n            return (\r\n                <form className=\"edit_form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={this.state.student.studentId} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={this.state.student.studentName} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <select defaultValue={this.state.student.studentGender} disabled>\r\n                            <option value={0}>Nam</option>\r\n                            <option value={1}>Nữ</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"date\" defaultValue={this.state.student.studentDateOfBirth} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={this.state.student.studentPhone} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"number\" name=\"studentCount\" onChange={(e) => this.handleChange(e)} defaultValue={this.state.student.studentCount}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" name=\"studentScore\" onChange={(e) => this.handleChange(e)} defaultValue={this.state.student.studentScore}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={this.state.student.studentCourseId} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" defaultValue={this.state.student.studentCourseName} disabled/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Lưu</button>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                {this.renderClassInfo()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassInfo;","import React, { Component } from 'react';\r\n\r\n//TODO COMPONENTS\r\nimport Profile from './Profile';\r\nimport EditProfile from './EditProfile';\r\nimport ClassList from './ClassList';\r\nimport ClassInfo from './ClassInfo';\r\n\r\n//TODO SCSS\r\nimport \"../scss/Teacher.scss\";\r\n\r\nclass Teacher extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            status: \"CLASS_LIST\"\r\n        };\r\n    }\r\n\r\n    option() {\r\n        switch (this.state.status) {\r\n            case \"PROFILE\":\r\n                return <Profile \r\n                            teacherid={this.props.teacherid}\r\n                            signOut={() => this.props.signOut()}\r\n                            changeStatus={(status) => this.changeStatus(status)}\r\n                        />\r\n            case \"EDIT_PROFILE\":\r\n                return <EditProfile\r\n                            teacherid={this.props.teacherid}\r\n                            changeStatus={(status) => this.changeStatus(status)}\r\n                        />\r\n            case \"CLASS_LIST\":\r\n                return <ClassList \r\n                            teacherid={this.props.teacherid}\r\n                            changeStatus={(status) => this.changeStatus(status)}\r\n                            getClassId={(classid) => this.getClassId(classid)}\r\n                        />\r\n            case \"CLASS_INFO\":\r\n                return <ClassInfo\r\n                            teacherid={this.props.teacherid}\r\n                            classid={this.state.classid}\r\n                        />\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    changeStatus(status) {\r\n        this.setState({\r\n            status: status\r\n        });\r\n    }\r\n\r\n    getClassId(classid) {\r\n        this.setState({\r\n            classid: classid\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"teacher\">\r\n                {this.option()}\r\n                <div className=\"btn\">\r\n                    <button onClick={() => this.changeStatus(\"CLASS_LIST\")}>Lớp học</button>\r\n                    <button onClick={() => this.changeStatus(\"PROFILE\")}>Cá nhân</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Teacher;","import React, { Component } from 'react';\r\n\r\n//TODO API\r\nimport { getDataTeacher } from \"./api/Database\";\r\nimport { HMAC_SHA256 } from \"./api/Authentication\";\r\n\r\n//TODO COMPONENTS\r\nimport Login from './components/Login';\r\nimport Teacher from './components/Teacher';\r\n\r\n//TODO SCSS\r\nimport \"./App.scss\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const teacherid = JSON.parse(sessionStorage.getItem(\"teacherid\"));\r\n        if(teacherid) {\r\n            this.setState({ teacherid: teacherid });\r\n        }\r\n    }\r\n\r\n    async checkAccount(account) {\r\n        const DataTeacher = await getDataTeacher();\r\n        const teacher = DataTeacher.filter((teacher) => account.username === teacher.username && HMAC_SHA256(account.password, teacher.salt) === teacher.hash)[0];\r\n        if(teacher) {\r\n            alert(\"Đăng nhập thành công.\");\r\n            this.setState({\r\n                teacherid: teacher.teacherid\r\n            });\r\n            sessionStorage.setItem(\"teacherid\", JSON.stringify(teacher.teacherid));\r\n        } else alert(\"Sai mật khẩu hoặc tài khoản không tồn tại.\")\r\n    }\r\n\r\n    checkLogin() {\r\n        if(this.state.teacherid) {\r\n            return <Teacher\r\n                        teacherid={this.state.teacherid}\r\n                        signOut={() => this.signOut()}\r\n                    />\r\n        }\r\n        return <Login checkAccount={(account) => this.checkAccount(account)}/>\r\n    }\r\n\r\n    signOut() {\r\n        sessionStorage.clear();\r\n        this.setState({ teacherid: null });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.checkLogin()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}